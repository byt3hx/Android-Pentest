package com.ch4n;

import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;



public class Main {

    public static void main(String[] args) {
        String encrypted = "6f4e8fff1523407fabf1e6ba7abcc585129e3802f785a75f28b0e63482449f5347501f6b38f014ae4f51e37ffb9b323b";
        String key = "FE5A10236842EF551087301E8B17EEFB";
        String initVector = "1337133713371337BAADF0000DAAAAAA";
        System.out.println(decrypt(key,initVector,encrypted));
    }
    public static byte[] hexStringToByteArray(String s) {
        int len = s.length();
        byte[] data = new byte[len / 2];
        for (int i = 0; i < len; i += 2) {
            data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4)
                    + Character.digit(s.charAt(i+1), 16));
        }
        return data;
    }
    public static String decrypt(String key, String iv, String encrypted) {
        try {

            SecretKeySpec skeySpec = new SecretKeySpec(hexStringToByteArray(key), "AES");

            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            cipher.init(2, skeySpec, new IvParameterSpec(hexStringToByteArray(iv)));

            byte[] original = cipher.doFinal(hexStringToByteArray(encrypted));

            return new String(original);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return "";
    }
}
